type Job {
  id: ID
  data: JobData
}

type JobData {
  title: String
  description: String
  deadline: String
  recruiterEmail: String
  requirements: [String]
  applications: [Application]
}

type Application {
  job: Job
  user: User
  resume: String
  coverLetter: String
}

type User {
  email: String
  data: UserData
}

type UserData {
  name: String
  jobsApplied: [Application]
  skills: [String]
  userType: String
}

type Query {
  jobPostings: [Job]
  jobApplications(jobId: ID): JobData
  jobsApplied(email: String): User
}

type Mutation {
  createJob(job: Job): ID
  addUser(user: User): String
  applyForJob(input: ApplicationInput): Application
}

input JobInput {
  title: String
  description: String
  deadline: String
  recruiterEmail: String
  requirements: [String]
}

input ApplicationInput {
  job: ID
  user: String
  resume: String
  coverLetter: String
}

query Jobs {
  id
  data {
    title
    description
    deadline
    recruiterEmail
    requirements
    applications
  }
}

query JobApplications {
  jobApplications(jobId: "67890") {
    applicationId
    userId
    email
    resume
    coverLetter
    userProfile {
      fullName
      skills
      resume
    }
  }
}

query JobsApplied {
  jobsApplied(userId:"98765") {
    jobId
    recruiterId
    title
    description
    requirements
    deadline
  }
}

query UserProfile {
  userProfile(userId: "98765") {
    fullName
    skills
    resume
  }
}

mutation CreateJobPosting {
  createJobPosting(input: {
    title: "Software Engineer",
    description: "Exciting opportunity for a skilled software engineer...",
    requirements: ["B.S. degree in Computer Science", "Experience with Java"],
    deadline: "2023-12-31",
    recruiterId: "12345"
  }) {
    jobId
  }
}

mutation ApplyForJob {
  applyForJob(input: {
    jobId: "67890",
    userId: "98765",
    resume: "base64_encoded_resume_content",
    coverLetter: "A brief covver letter for..."
  }) {
    applicationId
  }
}

mutation CreateUserAccount {
  createUserAccount(input: {
    email: "john.doe@example.com",
    password: "hased_password",
    userType: "job_hunter"
  }) {
    userId
  }
}

mutation UpdateUserProfile {
  updateUserProfile(input: {
    fullName: "John Doe",
    skills: ["Java", "Python", "Web Development"]
  }) {
    userId
  }
}
